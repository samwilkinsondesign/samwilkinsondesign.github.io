*,
*::after,
*::before {
	box-sizing: border-box;
}

:root {
	font-size: 16px;
}

body {
	margin: 0;
	--color-text: #333;
	--color-bg: #FFFEFC;
	--color-link: #333;
	--color-link-hover: #000;
	--color-gradient: linear-gradient(19deg, #ddd6f3 0%, #edbfca 50%, #ffc8a8 100%);
	color: var(--color-text);
	background-color: var(--color-bg);
	font-family: 'SF Pro Text', -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica Neue, Helvetica, Arial, sans-serif;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	--cursor-stroke: #000; 
	--cursor-fill: none; 
	--cursor-stroke-width: 1px; 
	line-height: 1;
	font-weight: 400;
	overflow: hidden;
	overflow-y: scroll;
}

.off__canvas {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    background: var(--color-bg);
	display: flex;
	flex-direction: column;
    height: auto;
    max-height: calc(100vh - 4rem - env(safe-area-inset-bottom));
    overflow-y: auto;
    margin: 0;
    z-index: 1502;
    -webkit-transition: all 0.4s ease-out;
    transition: all 0.4s ease-out;
    -webkit-transform: translate3d(0, -100%, 0);
    transform: translate3d( 0, -100%, 0);
}

.active .off__canvas {
	-webkit-transform: translate3d(0, 0, 0);
	transform: translate3d(0, 0, 0);
}

.off__canvas button.close__off-canvas {
	margin: auto;
}
  
.active::after {
	content: "";
	display: block;
	position: fixed;
	z-index: 1501;
	height: 100%;
	overflow: hidden;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0; 
	background: rgba(51,51,51,0.2);
}

.canvas__bottom {
    position: sticky;
    bottom: 0;
    align-self: auto;
    padding-bottom: 2rem;
    z-index: 1503;
    background: linear-gradient(to bottom, rgb(255 255 255 / 0%) 0%, rgb(255 255 255) 100%);
}

.off__canvas .content__text {
	margin-top: 2rem;
}

.active body,
.oh {
	overflow: hidden;
}

/* Page Loader */
.js .loading::before,
.js .loading::after {
	content: '';
	position: fixed;
	z-index: 5000;
}

.js .loading::before {
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: var(--color-bg);
}

.js .loading::after {
	top: 50%;
	left: 50%;
	width: 60px;
	height: 60px;
	margin: -30px 0 0 -30px;
	border-radius: 50%;
	opacity: 0.4;
	background: var(--color-gradient);
	animation: loaderAnim 0.7s linear infinite alternate forwards;

}

@keyframes loaderAnim {
	to {
		opacity: 1;
		transform: scale3d(0.5,0.5,1);
	}
}

::-moz-selection { /* Code for Firefox */
	background: #ffc8a8
  }
  
  ::selection {
	background: #ffc8a8
  }

a {
	text-decoration: none;
	color: var(--color-link);
	outline: none;
}

a:hover {
	color: var(--color-link-hover);
	outline: none;
}

/* Better focus styles from https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible */
a:focus {
	/* Provide a fallback style for browsers
	 that don't support :focus-visible */
	outline: none;
	background: lightgrey;
}

a:focus:not(:focus-visible) {
	/* Remove the focus indicator on mouse-focus for browsers
	 that do support :focus-visible */
	background: transparent;
}

a:focus-visible {
	/* Draw a very noticeable focus style for
	 keyboard-focus on browsers that do support
	 :focus-visible */
	outline: 2px solid #6219ff;
	background: transparent;
}

.unbutton {
	background: none;
	border: 0;
	padding: 0;
	margin: 0;
	font: inherit;
}

.unbutton:focus {
	outline: none;
}

main {
	padding: 0;
}

.cursor {
	display: none;
}

.button {
    pointer-events: auto;
    cursor: pointer;
    background: transparent;
    border-radius: 1rem;
    padding: 0.5rem 1rem;
	margin: 0.5rem;
    border: none;
    font-size: 0.875rem;
	white-space: nowrap;
    position: relative;
    display: block;
	color: var(--color-link);
}

.button::before,
.button::after {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
}

.button.accent {
	background: white;
    -webkit-box-shadow: 0 4px 8px rgb(0 0 0 / 4%), 0 0 2px rgb(0 0 0 / 6%), 0 0 1px rgb(0 0 0 / 4%);
    box-shadow: 0 4px 8px #0000000a, 0 0 2px #0000000f, 0 0 1px #0000000a;
	transition: 0.2s;
}

.button.accent:hover {
	color: white;
	background-color: var(--color-link);

}

.button.primary {
    color: white;
	font-weight: 700;
}

.button--this > span {
	display: inline-block;
}

.button--this:hover > span {
	opacity: 0;
}

.marquee {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	overflow: hidden;
	pointer-events: none;
}

.marquee__inner {
	width: fit-content;
	display: flex;
	position: relative;
	--offset: 1rem;
	--move-initial: calc(-25% + var(--offset));
	--move-final: calc(-50% + var(--offset));
	transform: translate3d(var(--move-initial), 0, 0);
	animation: marquee 1s linear infinite;
	animation-play-state: paused;
	opacity: 0;
}

.button--this:hover .marquee__inner {
	animation-play-state: running;
	opacity: 1;
	transition-duration: 0.4s;
}

.marquee span {
    text-align: center;
    white-space: nowrap;
    font-style: italic;
    padding: 0.5rem 1rem;
}

.link {
    cursor: pointer;
    font-size: 18px;
    position: relative;
    white-space: nowrap;
    color: var(--color-text);
}

.link::before,
.link::after {
    position: absolute;
    width: 100%;
    height: 1px;
    background: currentColor;
    top: 100%;
    left: 0;
    pointer-events: none;
}

.link::before {
    content: '';
    /* show by default */
}

@keyframes marquee {
	0% {
		transform: translate3d(var(--move-initial), 0, 0);
	}

	100% {
		transform: translate3d(var(--move-final), 0, 0);
	}
}

.link--glitch {
    font-family: 'Space Mono', monospace;
    font-size: 12px;
	line-height: 32px;
	font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 2pt;
}

.link--glitch:hover span {
    animation: glitchText 0.4s linear;
}

@keyframes glitchText {
    0% {
        opacity: 1;
        transform: translate3d(-10px, 0, 0) scale3d(-1, -1, 1);
        -webkit-clip-path: polygon(0 20%, 100% 20%, 100% 21%, 0 21%);
        clip-path: polygon(0 20%, 100% 20%, 100% 21%, 0 21%);
    }

    10% {
        -webkit-clip-path: polygon(0 33%, 100% 33%, 100% 33%, 0 33%);
        clip-path: polygon(0 33%, 100% 33%, 100% 33%, 0 33%);
    }

    20% {
        -webkit-clip-path: polygon(0 44%, 100% 44%, 100% 44%, 0 44%);
        clip-path: polygon(0 44%, 100% 44%, 100% 44%, 0 44%);
    }

    35% {
        -webkit-clip-path: polygon(0 50%, 100% 50%, 100% 20%, 0 20%);
        clip-path: polygon(0 50%, 100% 50%, 100% 20%, 0 20%);
    }

    50% {
        -webkit-clip-path: polygon(0 70%, 100% 70%, 100% 70%, 0 70%);
        clip-path: polygon(0 70%, 100% 70%, 100% 70%, 0 70%);
    }

    60% {
        -webkit-clip-path: polygon(0 80%, 100% 80%, 100% 80%, 0 80%);
        clip-path: polygon(0 80%, 100% 80%, 100% 80%, 0 80%);
    }

    70% {
        -webkit-clip-path: polygon(0 50%, 100% 50%, 100% 55%, 0 55%);
        clip-path: polygon(0 50%, 100% 50%, 100% 55%, 0 55%);
    }

    80% {
        -webkit-clip-path: polygon(0 70%, 100% 70%, 100% 80%, 0 80%);
        clip-path: polygon(0 70%, 100% 70%, 100% 80%, 0 80%);
    }

    90% {
        transform: translate3d(-10px, 0, 0) scale3d(-1, -1, 1);
    }

    100% {
        opacity: 1;
        transform: translate3d(0, 0, 0) scale3d(1, 1, 1);
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
        clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
    }
}

.link--glitch::before {
    height: 2px;
    opacity: 0;
}

.link--glitch:hover::before {
    opacity: 1;
    animation: glitchLine 0.4s steps(2, start) forwards;
}

@keyframes glitchLine {
    0% {
        transform: scale3d(1, 1, 1);
    }

    10% {
        transform: translate3d(10px, 0, 0);
    }

    20% {
        transform: translate3d(0, 4px, 0);
    }

    30% {
        transform: scale3d(0.1, 1.4, 1) translate3d(0, -25px, 0);
        transform-origin: 100% 0%;
    }

    40% {
        transform: scale3d(1, 0.3, 1) translate3d(0, 25px, 0);
    }

    50% {
        transform: scale3d(0.5, 0.3, 1) translate3d(-100px, -80px, 0);
    }

    60% {
        transform: scale3d(1, 1.25, 1) translate3d(10px, -5px, 0);
    }

    70% {
        transform: scale3d(0.5, 0.5, 1) translate3d(0, 20px, 0);
    }

    80% {
        transform: translate3d(-30, 10px, 0) scale3d(1, 0.4, 1);
        transform-origin: 100% 0%;
    }

    90% {
        transform: scale3d(1, 0.5, 1) translate3d(0, -15px, 0);
        ;
        transform-origin: 0% 50%;
    }

    100% {
        opacity: 1;
    }
}

.link__graphic {
    position: absolute;
    top: 0;
    left: 0;
    pointer-events: none;
    fill: none;
    stroke: var(--color-link);
    stroke-width: 1px;
}

.link__graphic--stroke path {
    stroke-dasharray: 200;
    stroke-dashoffset: 200;
}

.link:hover .link__graphic--stroke path {
    stroke-dashoffset: 0;
}

.link__graphic--scribble {
    top: 1.25rem
}

.link__graphic--scribble path {
    transition: stroke-dashoffset 0.6s cubic-bezier(0.7, 0, 0.3, 1);
}

.link:hover .link__graphic--scribble path {
    transition-timing-function: cubic-bezier(0.8, 1, 0.7, 1);
    transition-duration: 0.3s;
}

.link--scribble {
	font-size: 0.875rem;
}

.link--scribble::before {
    display: none;
}

.mono {
	font-family: 'Space Mono', monospace;
}

h1, h2, h3, h4, h5, h6 {
	line-height: 1.6;
	font-weight: 500;
	margin: 0;
	margin-bottom: 0.5rem;
}

h4 {
	line-height: 2rem;
}

.gradient {
	background-color: #ddd6f3;
	background-image: var(--color-gradient);	
}

.left {
	justify-content: flex-start;
}

.center {
	justify-content: center;
}

.right {
	justify-content: flex-end;
}

.site__header {
    position: fixed;
    top: 0;
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    min-height: 4rem;
	padding: 0 0.5rem;
	background-color: white;
    box-shadow: 0 1px 1px rgb(51 51 51 / 16%);
    z-index: 1500;
}

.header__item {
	display: flex;
}

.site-title {
    display: flex;
    flex-direction: row;
    align-content: center;
    justify-content: flex-start;
    align-items: center;
}

.profile {
    position: relative;
	width: 3rem;
	height: 3rem;
	margin: 0.5rem;
}

.profile img {
	position: absolute;
	top: 4px;
	right: 4px;
    bottom: 4px;
    left: 4px;
	width: 2.5rem;
	height: 2.5rem;
    border-radius: 100%;
}

.site__header #active__dot .title {
	font-size: 1rem;
	font-weight: 300;
	padding-left: 0.5rem;
	margin: 0;
}

.profile .gradient {
	position: absolute;
	width: 3rem;
	height: 3rem;
	border-radius: 100%;
}

.profile .ellipse {
	position: absolute;
	top: 2px;
	right: 2px;
    bottom: 2px;
    left: 2px;
    width: 2.75rem;
    height: 2.75rem;
    border-radius: 100%;
	background-color: white;	
}

.live__dot {
	display: none;
    width: 0.5rem;
    height: 0.5rem;
    border-radius: 100%;
    background-color: #e16259;
	margin-left: 0.25rem;
}

.online .live__dot {
	display: block;
	background-color: #24C138;
	animation: pulse 1600ms infinite;
}

@keyframes pulse {
	0% {
	  box-shadow: 0 0 0 0 rgba(36,193,56,0.4);
	}
	80% {
		box-shadow: 0 0 0 1rem rgba(36,193,56,0);
	}
	100% {
		box-shadow: 0 0 0 0 rgba(36,193,56,0);
	}
  }

#active__dot {
    display: inline-flex;
    align-items: center;
}

.job__role {
    font-size: 1rem;
	font-weight: 300;
	text-align: center;
    margin: 0;
}

.site__header .job__role span {
	display: none;
}

.app__tag {
	display: inline-flex;
	align-items: center;
    background: transparent;
    border-radius: 2rem;
    padding: 0.5rem 1.25rem;
    margin: 0 0.5rem 1rem 0;
    border: 1px solid #EBEBEB;
	color: var(--color-text);
    -webkit-box-shadow: 0 0 16px rgb(51 51 51 / 16%);
    box-shadow: 0 0 16px #33333329;
}

.app__tag span {
	font-size: 0.875rem;
	line-height: 1rem;
    white-space: nowrap;
	margin-left: 0.5rem;
}

.items {
	margin-top: 4rem;
}

.heading--item {
    font-size: 8vw;
    font-size: clamp(6rem,8vw,8rem);
    line-height: 1.6;
	font-weight: 500;
}

.heading--item .splitting .word, 
.heading--item .splitting .char {
	display: flex;
}

.char-wrap {
	display: inline-block;
	position: relative;
	overflow: hidden;
}

.char {
	display: inline-block;
	will-change: transform;
}

.heading--item > span {
    display: flex;
}

.heading--item > span:first-child {
    font-size: 6vw;
    font-size: clamp(4rem,6vw,6rem);
}

.heading--item > span:nth-child(2) {
	margin-top: -2vw;
	text-transform: lowercase;
	font-size: 8vw;
    font-size: clamp(6rem,8vw,8rem);
}

.item {
	margin: 0;
}

.item__imgwrap,
.content__imgwrap {
	overflow: hidden;
    display: flex;
    align-items: center;
    width: 100%;
	will-change: transform;
}

.item__img,
.content__img {
	width: 100%;
	height: 100%;
	min-height: 100vw;
	background-size: cover;
	background-position: 50% 50%;
	will-change: transform;
}

.item__meta {
	margin: 0.5rem;
	overflow: hidden;
}

.item__meta-row {
	position: relative;
	display: block;
	margin-bottom: 0.5rem;
}

.item__meta-row span {
	will-change: transform;
}

.type__tag span,
.item__meta .tag span {
	display: inline-block;
	font-size: 0.75rem;
    line-height: 1rem;
    background-color: #f9f5ff;
    color: #6219ff;
    margin: 0.25rem 0.5rem 0.25rem 0;
    padding: 0.25rem 0.5rem;
}

.item__meta .title {
	margin: 0 0.5rem;
}

.item__meta .title span {
    font-size: 1.25rem;
    line-height: 2rem;
	font-weight: 500;
}

.item__enter,
.heading--item {
	display: none;
	will-change: transform;
}

.item__enter-circle {
	fill: none;
	stroke: #000;
	stroke-width: 1px;
	will-change: transform, opacity;
}

.item__excerpt {
    will-change: transform;
	margin: 0 1rem 1rem;
}

.item__excerpt-link span:hover::after {
	transform: scale3d(0,1,1);
}

.frame--footer {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-content: center;
	justify-content: space-between;
    align-items: center;
	padding: 0;
	border-top: 1px solid rgb(51 51 51 / 16%);
}

.social__links,
.email {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    align-content: center;
    justify-content: flex-start;
    align-items: center;
}

.social, .email {
	padding: 0.5rem;
	margin: 0.5rem;
}

.email {
    font-size: 0.875rem;
    font-weight: 500;
}

.social .svg__icon,
.social .svg__icon svg {
	width: 1rem;
	height: 1rem;
}

.copyright--footer {
	width: 100%;
	padding: 0.5rem 1rem;
}

.copyright {
	font-size: 0.75rem;
	line-height: 1;
    font-weight: 500;
	color: white;
	margin: 0;
}

.content {
	position: fixed;
	top: 0;
	right: 0;
	width: 100%;
	height: 100vh;
	z-index: 2000;
	pointer-events: none;
}

.content .heading {
	margin: 3rem 0 2rem;
	font-size: 10vw;
    font-size: clamp(2rem, 10vw, 5rem);
	font-weight: 500;
}

.content__article {
	height: 0;
	overflow: hidden;
}

.content__article--open {
	pointer-events: auto;
	padding: 0 0 20vh;
	height: 100%;
	overflow-y: scroll;
}

.content__article .heading {
	font-family: 'Space Mono', monospace;
	text-align: center;
}

.content__text {
	padding: 0;
	line-height: 1.5;
	margin: 0 auto;
	max-width: 1920px;
	will-change: transform;
}

.content__text p, 
.content__text h4 {
	max-width: 720px;
	margin: auto;
	padding: 0 1rem;
}
.content__text p {
	margin-bottom: 1.5rem;
}

.content__text h4 {
	font-family: 'Space Grotesk', sans-serif;
	font-size: 1.125rem;
	margin-bottom: 0.5rem;
	font-weight: 600;
}

.content__text p.smaller--paragraph {
    margin-bottom: 0.25rem;
}

.content__text img {
	max-width: 100%;
	margin: 0 auto 0.5rem;
	display: block;
}

.section__column--half {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 0 0.5rem;
}

.section__column--third {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    gap: 0 0.5rem;
}

.section__column--quarter {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    gap: 0 0.5rem;
}

.section__column img,
.section__svg {
    margin: 0 0 0.5rem;
}

.section__design, 
.section__video,
.section__video--full {
	max-width: 100%;
	margin: 0 auto 0.5rem;
	aspect-ratio: auto 16 / 9;
}

.section__design, 
.section__video {
	display: flex;
	justify-content: center;
	align-items: center;
}

.section__design img {
    width: 100%;
    height: 100%;
	max-width: 1366px;
	max-height: 768px;
	margin: 0 auto;	
}

.section__video video {
    width: 100%;
    height: 100%;
	max-width: 1366px;
	max-height: 768px;
	margin: auto;
}

.section__video--full video {
	display: block;
	width: 100%;
	height: auto;
}

.section__svg {
    display: flex;
    align-content: center;
    justify-content: center;
    align-items: center;
}

.content__back {
	display: flex;
    align-items: center;
	position: absolute;
	top: 0.5rem;
	left: 1rem;
	opacity: 0;
	cursor: pointer;
}

.content__article--open ~ .content__back {
	pointer-events: auto;
}

.triangle--left {
    width: 6px;
    height: 8px;
    border-style: solid;
    border-width: 4px 6px 4px 0;
    border-color: transparent var(--color-text) transparent transparent;
}

.back__button {
    line-height: 1.5rem;
    font-size: 0.75rem;
    letter-spacing: 0.5pt;
    font-weight: 500;
    margin-left: 0.25rem;
	color: var(--color-text);
}

#barebiology .section__design, 
#barebiology .section__video {
	background-color: #E1E1E0;
}

#doralarson .section__design, 
#doralarson .section__video {
	background-color: #E6EFEF;
}

#doralarson .section__svg {
	background-color: #FAF0F3;
}

#doralarson .section__svg img {
    height: 16vw;
}

#kentbrushes .section__design, 
#kentbrushes .section__video {
	background-color: #F5EBE0;
}

@media screen and (min-width: 53em) {
	.site__header {
		display: grid;
		grid-template-columns: 1fr 1fr 1fr;
	}
	.site__header button {
		display: block;
		margin: 0.5rem 0.5rem 0.5rem auto;
	}
	.site__header .job__role span {
		display: inline-block;
	}
	.item {
		position: relative;
		display: grid;
		grid-template-columns: 1fr 1fr 1fr; 
		grid-template-rows: minmax(400px, 40vh) min-content minmax(120px, 20vh);
		grid-template-areas: 
		  "image image enter"
		  "image image meta"
		  "image image excerpt"; 
	}
	.item--invert {
		grid-template-areas: 
		"enter image image"
		"meta image image"
		"excerpt image image"; 
	}
	.item__imgwrap {
		grid-area: image;
	}
	.item__img {
		width: 100%;
		height: 100%;
		min-height: 100%;
	}
	.item__enter {
		align-self: center;
		justify-self: center;
		display: flex;
		grid-area: enter;
		position: relative;
		z-index: 1000;
		max-width: 400px;
		max-height: 400px;
		align-items: center;
		justify-content: center;
	}
	.item__enter-circle {
		pointer-events: none;
		cursor: pointer;
		flex: none;
	}
	.item__meta {
		grid-area: meta;
		justify-self: center; 
		align-self: start;
		text-align: center;
		padding: 0 3rem;
		margin: 2rem auto;
	}
	.item__meta-row {
		margin-bottom: 2rem;
	}
	.item__excerpt {
		grid-area: excerpt;
		justify-self: center;
		padding: 0 3rem;
		margin-bottom: 1rem;
	}
	.item__excerpt p {
		margin: 0 0 1.5rem;
	}
	.heading > span {
		justify-content: center;
	}
	.heading--item {
		display: block;
		margin: 0;
		grid-area: 1 / 1 / 4 / 3;
		justify-self: center;
		align-self: center;
		text-align: center;
		color: white;
		overflow: hidden;
	}
	.item--invert .heading--item {
		grid-area: 1 / 2 / 4 / 4;
	}
	.content__text img {
		margin: 0 auto 1rem;
	}
	.section__design .content__text img {
		margin: auto;
	}
	.section__column--half,
	.section__column--third,
	.section__column--quarter {
		gap: 0 1rem;
	}
	.section__column img,
	.section__svg {
		margin: 0 0 1rem;
	}
	.section__design,
	.section__video,
	.section__video--full {
		width: 100%;
		margin: 0 auto 1rem;
	}
	.section__video video {
		clip-path: inset(1px 1px);
	}
}

@media (any-pointer:fine) {
	.cursor {
		position: fixed;
		top: 0;
		left: 0;
		display: block;
		pointer-events: none;
		z-index: 5000;
	}

	.cursor__inner {
		fill: var(--cursor-fill);
		stroke: var(--cursor-stroke);
		stroke-width: var(--cursor-stroke-width);
		opacity: 0.7;
	}

	.no-js .cursor {
		display: none;
	}

}
/* Recommended styles for Splitting */
.splitting .word,
.splitting .char {
  display: inline-block;
}

/* Psuedo-element chars */
.splitting .char {
  position: relative;
}

/**
 * Populate the psuedo elements with the character to allow for expanded effects
 * Set to `display: none` by default; just add `display: block` when you want
 * to use the psuedo elements
 */
.splitting .char::before,
.splitting .char::after {
  content: attr(data-char);
  position: absolute;
  top: 0;
  left: 0;
  visibility: hidden;
  transition: inherit;
  user-select: none;
}

/* Expanded CSS Variables */

.splitting {
  /* The center word index */
  --word-center: calc((var(--word-total) - 1) / 2);

  /* The center character index */
  --char-center: calc((var(--char-total) - 1) / 2);

  /* The center character index */
  --line-center: calc((var(--line-total) - 1) / 2);
}

.splitting .word {
  /* Pecent (0-1) of the word's position */
  --word-percent: calc(var(--word-index) / var(--word-total));

  /* Pecent (0-1) of the line's position */
  --line-percent: calc(var(--line-index) / var(--line-total));
}

.splitting .char {
  /* Percent (0-1) of the char's position */
  --char-percent: calc(var(--char-index) / var(--char-total));

  /* Offset from center, positive & negative */
  --char-offset: calc(var(--char-index) - var(--char-center));

  /* Absolute distance from center, only positive */
  --distance: calc(
     (var(--char-offset) * var(--char-offset)) / var(--char-center)
  );

  /* Distance from center where -1 is the far left, 0 is center, 1 is far right */
  --distance-sine: calc(var(--char-offset) / var(--char-center));

  /* Distance from center where 1 is far left/far right, 0 is center */
  --distance-percent: calc((var(--distance) / var(--char-center)));
}

.splitting.cells img { width: 100%; display: block; }

@supports ( display: grid ) {
  .splitting.cells {
    position: relative;
    overflow: hidden;
    background-size: cover;
    visibility: hidden;
  }

  .splitting .cell-grid {
    background: inherit;
    position: absolute;
    top: 0; 
    left: 0; 
    width: 100%; 
    height: 100%;
    display: grid;
    grid-template: repeat( var(--row-total), 1fr ) / repeat( var(--col-total), 1fr );
  }

  .splitting .cell {
    background: inherit;
    position: relative;
    overflow: hidden;
  }

  .splitting .cell-inner {
    background: inherit;
    position: absolute;
    visibility: visible;
    /* Size to fit the whole container size */
    width: calc(100% * var(--col-total));
    height: calc(100% * var(--row-total));
    /* Position properly */
    left: calc(-100% * var(--col-index));
    top: calc(-100% * var(--row-index));
  }

  /* Helper variables for advanced effects */
  .splitting .cell {
    --center-x: calc((var(--col-total) - 1) / 2);
    --center-y: calc((var(--row-total) - 1) / 2);

    /* Offset from center, positive & negative */
    --offset-x: calc(var(--col-index) - var(--center-x));
    --offset-y: calc(var(--row-index) - var(--center-y));

    /* Absolute distance from center, only positive */
    --distance-x: calc( (var(--offset-x) * var(--offset-x)) / var(--center-x) );

    /* Absolute distance from center, only positive */
    --distance-y: calc( (var(--offset-y) * var(--offset-y)) / var(--center-y) );
  }
}


/*# sourceMappingURL=index.c524e9bf.css.map */
